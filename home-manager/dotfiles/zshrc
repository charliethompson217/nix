neofetch
export ZSH="$HOME/.nix-profile/share/oh-my-zsh"

source $ZSH/oh-my-zsh.sh

# Enable Powerlevel10k instant prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Source Powerlevel10k
source "$HOME/.nix-profile/share/zsh-powerlevel10k/powerlevel10k.zsh-theme"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export PATH=$HOME/.nix-profile/bin:$PATH
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="/run/current-system/sw/bin:$PATH"
# Manually source zsh-autosuggestions
ZSH_AUTOSUGGESTIONS_PATH="$HOME/.nix-profile/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
if [ -f "$ZSH_AUTOSUGGESTIONS_PATH" ]; then
  source "$ZSH_AUTOSUGGESTIONS_PATH"
fi

# Customize autosuggestions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=244"

# Enable syntax highlighting
source "$HOME/.nix-profile/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

setopt nocaseglob

alias python='python3'
alias pip='pip3'
alias zshconfig='nvim ~/.config/home-manager/dotfiles/zshrc'
alias vimconfig='nvim ~/.config/nvim/init.lua'
alias prettierconfig='nvim ~/.config/home-manager/dotfiles/prettierrc'
alias neofetchconfig='nvim ~/.config/home-manager/dotfiles/neofetch.conf'
alias nixdarwinconfig='nvim ~/.config/nix-darwin/flake.nix'
alias homemanagerconfig='nvim ~/.config/home-manager/home.nix'
alias vim='nvim'
alias cat='bat --paging=never --style=plain'
alias git-tree='git ls-tree -r --name-only HEAD | tree --fromfile'
alias ls='ls -1G'
alias grep='grep -i'
alias lsxl="ls | xargs ls -aG"
alias path="echo $PATH | split ':'"
alias srsync="rsync -av --info=progress2 -e ssh"
alias rsync="rsync -av --info=progress2"
alias alpharand="LC_ALL=C tr -dc 'A-Za-z0-9' < /dev/random"

export BAT_THEME="Dracula"

split() {
    if [ $# -lt 1 ]; then
        awk -F" " '{for(i=1;i<=NF;i++) print $i}'
        return 1
    fi
    awk -F"$1" '{for(i=1;i<=NF;i++) print $i}'
}

head() {
  if [[ "$*" =~ "-c" ]]; then
    command head "$@"
  else
    command head -n "$@"
  fi
}

new() {
    if [ -z "$1" ]; then
        echo "Usage: new <filename>"
        return 1
    fi
    
    template="$HOME/.config/defaults/$1"
    if [ -f "$template" ]; then
        cp "$template" ./
        echo "Created $1 from template"
    else
        echo "Error: No template found for $1"
        return 1
    fi
}
